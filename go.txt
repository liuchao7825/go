go 语言结构
1、包声明     
2、引入包
3、函数
4、变量
5、语句&表达式
6、注释

package main		//包声明

import "fmt"		//引入bao

func main() {		//函数
   /* 这是我的第一个简单的程序 */		注释
   fmt.Println("Hello, World!")		//语句&表达式
}

基础语法

1.go标记  （可以说关键字，标识符，常量，字符串，符号）
2.行分隔符 （如果多个语句写在同一行，用；分开，不同行不需要添加分隔符）
3.注释		
	// 单行注释
	/*多行注释 */
4.标识符（命名变量、类等程序实体）：由字母数字、下划线组成，且第一个字符不能是数字。
5.关键字
	25个关键字
		break		default		func	interface	select
		case		defer		go 		map			struct
		chan		else		goto	package		switch
		const		fallthrough	if		range		type
		continue	for			import	return		var
	36个预定义标识符
		append		bool		byte	 	cap			close	complex 	complex64	complex128
		copy		false		float32		float64		image	int			int8		int16
		int32		int64		iota  		len			make	new			nil			panic
		print		pintln		real		recover		string	true		uint		uint8
6.go语言的空格
		变量的声明必须使用空格隔开
		var age int;
二、go语言数据类型
	go变成语言中，数据类型用于声明函数和变量
	数据类型的出现是为了把数据分成所需内存大小不同的数据，变成的时候需要用大数据的时候才需要申请大内存，这样可以充分利用内存。
	1.布尔型   只能是true和false
	2.数字类型 
	整型int  和浮点型float32和float64，go原生支持复数
	int8 有符号8位
	unit16	无符号16位
	3.字符串型
	4.派生类型
		1.指针类型（Pointer）
		2.数组类型
		3.结构化类型（struct）
		4.Channelleix
		5.函数类型
		6.切片类型
		7.接口类型（intrface）
		8Mapleix
三、go语言变量
	声明变量的一般形式是使用var关键字   例如：var  identifier type
	变量声明
	1.指定变量类型，声明后肉不赋值，使用默认值
	2.根据值自行判定变量类型
	3.省略var，注意:= 左侧的变量不应该是已经声明过的，否则会导致编译错误
	多变量声明
	var  vname1,vname2,vname3  type      //类型相同福哦个变量，非全局变量

	var  （ vname1  v_type1
			vname2  v_type2） 			这种因式分解关键字的写法一般用于声明全局变量
	
	g, h :123,"hello" 					这种不带声明格式的只能再函数体中出现
	
	值类型和引用类型
	使用:= 可以搞笑的船舰一个新的变量，称之为初始化声明
	再相同的代码块中，不能再次对相同的变量使用初始化声明如 a:= 20，但 a= 20是可以的。
	未赋值而去使用会得到 （undefind）,只赋值二不使用（a declared  and not used）
四、go语言常量
	常量是一个简单值的标识符，再程序运行时，不会被修改的量。
	常量中的数据类型只能时布尔型，数字型（整数型，浮点型和复数）和自u类型。
	常量的定义格式
	const identifier  [type] = value
	可以省略类型说明符[type]，
	显式类型定义：const b string = “abc”
	隐式类型定义：const b = “abc”
	iota  特殊常量，在每一个const关键字出现时，被充值为0，然后下一个const出现之前，没出现ICiiota，其代表的数字就会自动增加1
	iota可以被用作枚举值：
	const (
		a = iota
		b = iota
		c = iota
	)
	第一个iota等于0，每当iota在新的一行被是哟个时，它的值都会自动增加1，所以a=0,b=1,c-2可以简写为
	const (
		a = iota
		b
		c
	)
五、go语言运算符
	算术运算符  + - * / % ++ --
	关系运算符  ==  两个值是否相等   是返回True 不是返回False
				!=  是否不相等
				>
				<
				>=
				<=
	逻辑运算符	&&   与  	两边操作数都是True，则返回True，否则返回False
				||	 或		两边操作数至少有一个为True，则返回True，否则返回False
				！	 非		条件为True，返回False，条件为False，返回True
				
	位运算符 & 与，|或，^异或（相同为0，不同为1），<<左移，>>右移
	其他运算符
				&	返回变量存储地址	&a	将给出变量的实际地址
				*	指针变量			*a  是一个指针变量
六、go语言条件语句
	if 语句
	例如  	package main
			import "fmt"
			func main(){
			/* 定义局部变量 */
			var a  int = 10
			/* 使用if语句判断布尔表达式 */
			if a < 20{
				/* 如果 条件为true 则只以下语句*/
				fmt.Printf("a 小于 20\n ")
			}
			fmt.Printf("a 的值为 ： %d\n",a)
			}
	if...else 语句
	switch  看例 switch1，2.go
	select  每个case都必须事一个同学
			所有channel表达式都会被求值
			如果有某个通信可以进行，他就执行；其他被忽略
			如果有多个case都可以运行，select会随机公平选出一个执行。其他不会执行
				否则： 	如果有defaule子句，则执行该语句。
						如果没有default字句，delect将阻塞，知道某个通信可以i运行；；go不会重新对channel或值进行求值
七、go语言循环语句
	有三种形式
	1.for  init ；condition；post{}
	2.for  condition{}
	3.for  {}
		init：一般为复制表达式，给控制变量赋初值；
		condition：关系表达式或逻辑表达式，循环控制条件；
		post：一般为复制表达式，给控制变量增量或减量
	for嵌套循环
		for [condition |  ( init; condition; increment ) | Range]
		{
		for [condition |  ( init; condition; increment ) | Range]
		{
			statement(s);
		}
		statement(s);
		}
	break 语句  用于终端当前for循环或跳出switch语句
	continue   	跳过当前循环的剩余语句，然后继续进行下一轮循环。
	goto   语句	将控制转移到被标记的语句。
			goto  label
			,,
			,
			label: statement;
			
八、go语言函数	
		函数事基本的代码块，u哦那个与执行一个任务。
		go 语言最少有哥main()函数。
		函数声明告诉了编译器函数的名称，返回类型和参数。
		go标准库提供了多种可动用的内置函数。
		go语言函数定义格式如下：
		
			func function_name( [parament list] ) [return_types]{
				函数体
			}
			
		func ：函数由func开始声明
		function_name:函数名称、函数名和参数列表一起构成了函数签名。
		paramerter list:参数列表，参数就行一个占位符，当函数被调用时，你可以将值传递给参数，这个值被称为实参数。参数列表致电给的时参数类型、顺序、及参数个数。
		return_types:返回类型，函数返回一列值。return——types是该列值的数据类型。
		函数体：函数定义的代码集合

		函数参数：函数入宫使用参数，该变量可称为函数的形象。
					形象就像定义在函数体内的局部变量。
			调用函数，可以通过两种方式来传递参数：
				值传递：在调用是将实际参数复制一份传递到函数中，这样在函数中如果对参数进行修改，将不会影响到实际参数。
				引用传递：指在调用函数时将实际参数的地址传递到函数中，那么在函数中参数所进行的修改，将影响到实际参数。  point.go
				go默认使用值传递，在调用过程中不会ing下到实际参数。
				
		函数的用法	
			函数作为值	函数顶以后可作为值来使用  function2.go
			闭包		闭包是匿名函数，可在动态编程中使用
			方法		方法就是一个包韩了接受者的函数

		